{"version":3,"sources":["classes/TrainedPokemon.jsx","classes/Trainer.jsx","classes/Pokemon.jsx","classes/PokemonList.jsx","classes/Filters.jsx","classes/App.jsx","utils/fetchPokemon.js","utils/Constants.js","index.jsx"],"names":["TrainedPokemon","state","xp","idInterval","gainExp","bind","this","setState","setInterval","clearInterval","props","name","src","actionB","className","onClick","onMouseMove","alt","Component","Trainer","address","bag","action","instances","map","item","weight","sprites","back_default","trainedId","id","Pokemon","front_default","PokemonList","pokemons","Filters","types","filter","active","buttons","type","App","data","selected","selectType","freePokemon","updateBag","Promise","all","Array","keys","x","a","fetch","then","r","json","moves","abilities","game_indices","results","t","pokemonFreedom","pokemonObject","newPokemon","Date","now","flatTypes","p","flat","uniqueTypes","Set","pokemonsToDisplay","pokemon","find","ReactDOM","render","document","getElementById"],"mappings":"wOAwDeA,E,kDArDb,aAAe,IAAD,8BACZ,gBAEKC,MAAQ,CACXC,GAAI,EACJC,WAAa,MAGf,EAAKC,QAAU,EAAKA,QAAQC,KAAb,gBARH,E,2CAWd,WACE,IAAQH,EAAOI,KAAKL,MAAZC,GACRI,KAAKC,SAAS,CACZL,GAAIA,EAAK,O,+BAIb,WAAqB,IAAD,OACZC,EAAaK,aACf,WACE,EAAKD,SAAS,CACZL,GAAK,EAAKD,MAAMC,GAAK,OAEtB,KAEPI,KAAKC,SAAS,CACZJ,iB,kCAIJ,WACEM,cAAcH,KAAKL,MAAME,c,oBAG3B,WACE,MAAgCG,KAAKI,MAA7BC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,IAAMC,EAApB,EAAoBA,QACZX,EAAOI,KAAKL,MAAZC,GAER,OACE,qBACEY,UAAU,iBACVC,QAASF,EACTG,YAAaV,KAAKF,QAHpB,UAKE,qBAAKU,UAAU,OAAf,SAAuBH,IACvB,qBAAKG,UAAU,MAAf,SAAsBZ,IACrBU,GAAO,qBAAKA,IAAKA,EAAKK,IAAKN,W,GAhDPO,aCCvBC,E,4JACJ,WACE,MAAwCb,KAAKI,MAArCC,EAAR,EAAQA,KAAMS,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAAMC,EAA7B,EAA6BA,OAEvBC,EAAYF,EAAIG,KAAI,SAAAC,GACxB,OACE,cAAC,EAAD,CAEEd,KAAMc,EAAKd,KACXe,OAAQD,EAAKC,OACbd,IAAKa,EAAKE,QAAQC,aAClBf,QAAW,kBAAIS,EAAOG,EAAKI,aAJtBJ,EAAKK,OAShB,OACE,sBAAKhB,UAAU,UAAf,UACE,qBAAKA,UAAU,OAAf,SAAuBH,IACvB,qBAAKG,UAAU,UAAf,SAA0BM,IAC1B,oBAAIN,UAAU,MAAd,SAAqBS,W,GApBPL,aA0BPC,ICCAY,E,kDA3Bb,aAAe,IAAD,8BACZ,gBAEK9B,MAAQ,CACXE,WAAY,MAJF,E,0CASd,WACE,MAKIG,KAAKI,MAJPC,EADF,EACEA,KACAe,EAFF,EAEEA,OACAb,EAHF,EAGEA,QAC0BD,EAJ5B,EAIEe,QAAWK,cAGb,OACE,qBAAIlB,UAAU,UAAUC,QAASF,EAAjC,UACE,qBAAKC,UAAU,OAAf,SAAuBH,IACvB,qBAAKG,UAAU,SAAf,SAAyBY,IACxBd,GAAO,qBAAKA,IAAKA,EAAKK,IAAKN,W,GAtBdO,aCChBe,E,4JACJ,WACE,MAA8B3B,KAAKI,MAA3BwB,EAAR,EAAQA,SAAWZ,EAAnB,EAAmBA,OAEbC,EAAYW,EAASV,KAAI,SAAAC,GAC7B,OAAO,cAAC,EAAD,aAAuBZ,QAAS,kBAAIS,EAAOG,KAAWA,GAAxCA,EAAKK,OAG5B,OAAO,oBAAIhB,UAAU,mBAAd,SAAkCS,Q,GARnBL,aAYXe,ICZTE,E,4JACJ,WACE,MAAkC7B,KAAKI,MAA/B0B,EAAR,EAAQA,MAAOC,EAAf,EAAeA,OAAQC,EAAvB,EAAuBA,OAEjBC,EAAUH,EAAMZ,KAAI,SAAAgB,GAAI,OAC5B,wBACE1B,UAAWwB,IAAWE,EAAO,SAAW,GAExCzB,QAAS,kBAAMsB,EAAOG,IAHxB,SAKGA,GAHIA,MAOT,OAAO,oBAAI1B,UAAU,UAAd,SAAyByB,Q,GAddrB,aAiBPiB,I,6BCdTM,E,kDACJ,WAAY/B,GAAQ,IAAD,8BACjB,cAAMA,IAEDT,MAAQ,CACXyC,KAAM,GACNC,SAAU,KACVtB,IAAK,IAEP,EAAKuB,WAAa,EAAKA,WAAWvC,KAAhB,gBAClB,EAAKwC,YAAc,EAAKA,YAAYxC,KAAjB,gBACnB,EAAKyC,UAAY,EAAKA,UAAUzC,KAAf,gBAVA,E,qDAcnB,WAAqB,IAAD,OClBb0C,QAAQC,IACb,YAAIC,MAAM,KAAKC,QACZ1B,KAAI,SAAA2B,GAAC,OAAIA,EAAI,KACb3B,IAFH,uCAEO,WAAMM,GAAN,eAAAsB,EAAA,sEACgBC,MAAM,GAAD,OCPb,oCDOa,YAAWvB,IAAMwB,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UADlD,qBACGd,EADH,QAESe,aACLf,EAAKgB,iBACLhB,EAAKiB,aAJT,kBAKIjB,GALJ,2CAFP,wDDmBKY,MACG,SAAAM,GACE,EAAKrD,SAAS,CACZmC,KAAOkB,S,wBAMrB,SAAWC,GACT,IAAQlB,EAAarC,KAAKL,MAAlB0C,SAERrC,KAAKC,SAAS,CACZoC,SAAUA,IAAakB,EAAI,KAAOA,M,yBAItC,SAAYC,GAEVxD,KAAKC,SAAS,CACVc,IAAKf,KAAKL,MAAMoB,IAAIgB,QAAO,SAAAZ,GAAI,OAAIA,EAAKI,YAAciC,S,uBAI5D,SAAUC,GACR,IAAMC,EAAU,eAAOD,GACvBC,EAAWnC,UAAYoC,KAAKC,MAGpB5D,KAAKL,MAAMoB,IACXf,KAAKC,SAAS,CACNc,IAAG,sBAAOf,KAAKL,MAAMoB,KAAlB,CAAuB2C,MAKlC1D,KAAKC,SAAS,CACNc,IAAM,CAAC2C,O,oBAMzB,WACE,IAAQtB,EAASpC,KAAKL,MAAdyC,KACAC,EAAarC,KAAKL,MAAlB0C,SACFtB,EAAMf,KAAKL,MAAMoB,IAGjB8C,EADYzB,EAAKlB,KAAI,SAAA4C,GAAC,OAAIA,EAAEhC,MAAMZ,KAAI,SAAAqC,GAAC,OAAIA,EAAErB,KAAK7B,WAC5B0D,OACtBC,EAAW,YAAO,IAAIC,IAAIJ,IAE1BK,EAAoB7B,EACtBD,EAAKL,QAAO,SAAAoC,GAAO,OACjBA,EAAQrC,MAAMsC,MAAK,SAAAb,GAAC,OAAIA,EAAErB,KAAK7B,OAASgC,QAE1CD,EAEJ,OACE,sBAAK5B,UAAU,MAAf,UACE,cAAC,EAAD,CAASH,KAAK,cAAWS,QAAQ,eAAeC,IAAKA,EAAKC,OAAQhB,KAAKuC,cACvE,cAAC,EAAD,CACET,MAAOkC,EACPhC,OAAQK,EACRN,OAAQ/B,KAAKsC,aAEf,cAAC,EAAD,CAAaV,SAAUsC,EAAmBlD,OAAQhB,KAAKwC,mB,GAnF7C5B,aAyFHuB,I,YGxFfkC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.e470c493.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass TrainedPokemon extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      xp: 0,\n      idInterval : null\n    };\n\n    this.gainExp = this.gainExp.bind(this);\n  }\n\n  gainExp() {\n    const { xp } = this.state;\n    this.setState({\n      xp: xp + 10,\n    });\n  }\n\n  componentDidMount() {\n    const idInterval = setInterval(\n        () => {\n          this.setState({\n            xp : this.state.xp + 10\n          })\n        }, 500\n    )\n    this.setState({\n      idInterval\n    })\n  } // pourquoi utiliser componentdidmount sachant que ce n'est pas une action qu'on fait qu'une fois \n\n  componentWillUnmount() {\n    clearInterval(this.state.idInterval)\n  }\n\n  render() {\n    const { name, src , actionB } = this.props;\n    const { xp } = this.state;\n\n    return (\n      <li\n        className=\"TrainedPokemon\"\n        onClick={actionB}\n        onMouseMove={this.gainExp}\n      >\n        <div className=\"name\">{name}</div>\n        <div className=\"exp\">{xp}</div>\n        {src && <img src={src} alt={name} />}\n      </li>\n    );\n  }\n}\n\nexport default TrainedPokemon;","import React, { Component } from 'react';\nimport TrainedPokemon from './TrainedPokemon';\n\nclass Trainer extends Component {\n  render() {\n    const { name, address, bag , action } = this.props;\n\n    const instances = bag.map(item => {\n      return (\n        <TrainedPokemon\n          key={item.id}\n          name={item.name}\n          weight={item.weight}\n          src={item.sprites.back_default}\n          actionB = {()=>action(item.trainedId)}\n        />\n      );\n    });\n\n    return (\n      <div className=\"Trainer\">\n        <div className=\"name\">{name}</div>\n        <div className=\"address\">{address}</div>\n        <ul className=\"bag\">{instances}</ul>\n      </div>\n    );\n  }\n}\n\nexport default Trainer;","import React, { Component } from 'react';\n\nclass Pokemon extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      idInterval: null,\n    };\n   \n  }\n\n  render() {\n    const {\n      name,\n      weight,\n      actionB,\n      sprites: { front_default: src }, // pourquoi sprites pour definir l'image\n    } = this.props;\n\n    return (\n      <li className=\"Pokemon\" onClick={actionB}>\n        <div className=\"name\">{name}</div>\n        <div className=\"weight\">{weight}</div>\n        {src && <img src={src} alt={name} />}\n      </li>\n    );\n  }\n}\n\nexport default Pokemon;\n","import React, { Component } from 'react';\nimport Pokemon from './Pokemon';\n\nclass PokemonList extends Component {\n  render() {\n    const { pokemons , action } = this.props;\n\n    const instances = pokemons.map(item => {\n      return <Pokemon key={item.id} actionB={()=>action(item)} {...item} />;\n    });\n\n    return <ul className=\"PokemonList list\">{instances}</ul>;\n  }\n}\n\nexport default PokemonList;","import React, { Component } from 'react';\n\n\nclass Filters extends Component {\n  render(){\n    const { types, filter, active } = this.props;\n\n    const buttons = types.map(type => (\n      <button\n        className={active === type ? 'active' : ''}\n        key={type}\n        onClick={() => filter(type)}\n      >\n        {type}\n      </button>\n    ));\n\n    return <ul className=\"Filters\">{buttons}</ul>;\n}}\n\nexport default Filters;\n","import React, { Component } from 'react';\nimport Trainer from './Trainer';\nimport PokemonList from './PokemonList';\nimport Filters from './Filters';\nimport fetchPokemons from \"../utils/fetchPokemon\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n// pourquoi des fois ça peut être defini comme tableau et non null\n    this.state = {\n      data: [],\n      selected: null,\n      bag: [], \n    };\n    this.selectType = this.selectType.bind(this);\n    this.freePokemon = this.freePokemon.bind(this);\n    this.updateBag = this.updateBag.bind(this);\n  }\n\n\n  componentDidMount() {\n    fetchPokemons()\n        .then(\n            results => {\n              this.setState({\n                data : results\n              })\n            }\n        )\n  }\n\n  selectType(t) {\n    const { selected } = this.state;\n\n    this.setState({\n      selected: selected === t ? null : t,\n    });\n  }\n\n  freePokemon(pokemonFreedom){\n\n    this.setState({\n        bag: this.state.bag.filter(item => item.trainedId !== pokemonFreedom)\n    })\n  }\n\n  updateBag(pokemonObject){\n    const newPokemon = {...pokemonObject}; // pourquoi on doit étaler le pokemon\n    newPokemon.trainedId = Date.now();\n\n    //const newPokemon = {...pokemonObject, trainedId: Date.now()} Autre facon de l'ecrire\n        if (this.state.bag){\n            this.setState({\n                    bag : [...this.state.bag, newPokemon]\n\n                }\n            )\n        }else{\n            this.setState({\n                    bag : [newPokemon]\n                }\n            )\n        }\n  }\n\n  render() {\n    const { data } = this.state;\n    const { selected } = this.state;\n    const bag = this.state.bag; // pourquoi bag n'est pas entre crochet\n    \n    const deepTypes = data.map(p => p.types.map(t => t.type.name));\n    const flatTypes = deepTypes.flat();\n    const uniqueTypes = [...new Set(flatTypes)];\n\n    const pokemonsToDisplay = selected\n      ? data.filter(pokemon =>\n          pokemon.types.find(t => t.type.name === selected),\n        )\n      : data;\n\n    return (\n      <div className=\"App\">\n        <Trainer name=\"Clémence\" address=\"Bourgpalette\" bag={bag} action={this.freePokemon} />\n        <Filters\n          types={uniqueTypes}\n          active={selected}\n          filter={this.selectType}\n        />\n        <PokemonList pokemons={pokemonsToDisplay} action={this.updateBag} />\n      </div>\n    );\n  }\n}\n\nexport default App;","import { url } from \"../utils/Constants\";\n\nexport default function fetchPokemons() {\n  return Promise.all(\n    [...Array(151).keys()]\n      .map(x => x + 1)\n      .map(async id => {\n        const data = await fetch(`${url}/${id}`).then(r => r.json());\n        delete data.moves;\n        delete data.abilities;\n        delete data.game_indices;\n        return data;\n      }),\n  );\n\n  \n}\n","export const url = 'https://pokeapi.co/api/v2/pokemon'; ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './classes/App';\n\nimport './reset.css';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}